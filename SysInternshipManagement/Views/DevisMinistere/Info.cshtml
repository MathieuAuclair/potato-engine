@model ApplicationPlanCadre.Models.DevisMinistere

@{
    ViewBag.Titre = Model.nom;
}

@Html.Action("ListeDevis")

<div class="super-view">

    <header class="fat-header">

        <h3>Devis ministériel</h3>

        <h1>@ViewBag.Titre</h1>
        <hr />

        <h3><b>@Html.DisplayNameFor(m => m.specialisation) : </b>@Html.DisplayFor(m => m.specialisation)</h3>

    </header>

    <div class="row">
        <div class="col-md-6">

            <div class="element">
                @Html.LabelFor(m => m.sanction)
                @Html.DisplayFor(m => m.sanction)
            </div>

            <div class="element">
                @Html.LabelFor(m => m.nbUnite)
                @Html.DisplayFor(m => m.nbUnite)@Html.Raw(" unités")
            </div>

            <div class="element">
                @Html.LabelFor(m => m.condition)
                @Html.DisplayFor(m => m.condition)
            </div>

            @if (Model.docMinistere != null)
            {
                <div class="element">
                    <a class="fancy-button rouge" href='@Url.Content("~/Files/Document ministériel/" + Model.docMinistere)' target="_blank">
                        <span>@Html.DisplayFor(m => Model.docMinistere)</span> <span class="glyphicon glyphicon-file"></span>
                    </a>
                </div>
            }

        </div>

        <div class="col-md-6">

            <div class="field-box">

                <p>Heures</p>
                <hr />

                <div class="element">
                    @Html.LabelFor(m => m.nbHeureFrmGenerale)
                    @Html.DisplayFor(m => m.nbHeureFrmGenerale)@Html.Raw("h")
                </div>

                <div class="element">
                    @Html.LabelFor(m => m.nbHeureFrmSpecifique)
                    @Html.DisplayFor(m => m.nbHeureFrmSpecifique)@Html.Raw("h")
                </div>

                <div class="element">
                    <label>Total</label>
                    @Html.ViewData["total"]@Html.Raw("h")
                </div>
            </div>

        </div>
    </div>

    @if (Model.EnonceCompetence.Count > 0)
    {
        <hr />
        <h2>Énoncés de compétence</h2>

        foreach (var enonceCompetence in Model.EnonceCompetence)
        {
            <div>
                <a class="info-child clearfix vertical-align" href='@Url.Action("Info", "EnonceCompetence", new { idCompetence = enonceCompetence.idCompetence })'>
                    <p class="droite">@Html.DisplayFor(p => enonceCompetence.description)</p>
                    <p class="gauche">@Html.DisplayFor(p => enonceCompetence.codeCompetence)</p>
                </a>
                <a class="fancy-button rouge vertical-align margin-left" href='@Url.Action("Supression", "EnonceCompetence", new { idCompetence = enonceCompetence.idCompetence })'><span class="glyphicon glyphicon-trash"></span></a>
            </div>
        }
    }

    <hr class="end-div" />

    <div class="menu-flottant">
    
        <a class="fancy-button blanc" href='@Url.Action("Index", "DevisMinistere")'><span class="glyphicon glyphicon-triangle-left"></span> Retour</a>
        <a class="fancy-button blanc" href='@Url.Action("Modifier", new { idDevis = Model.idDevis })'><span class="glyphicon glyphicon-pencil"></span> Modifier</a>
        <a class="fancy-button blanc" href='@Url.Action("Creation", "EnonceCompetence", new { idDevis = Model.idDevis })'><span class="glyphicon glyphicon-plus"></span> Ajouter un énoncé</a>

    </div>  
</div>

<script>
    $(("#p" + @Model.idDevis + "element")).addClass('active');
</script>
