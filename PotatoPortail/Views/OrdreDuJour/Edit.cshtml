@model ApplicationPlanCadre.ViewModels.OrdresDuJourVM.OrdreDuJourViewModel

@{
    ViewBag.Titre = "Modification de l'ordre du jour";
}

<script src="~/Scripts/ajoutDynamique.js" type="text/javascript"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => Model.ordreDuJour.IdOdJ)


    <div class="container">
        <div class="form-box">

            <header class="light-header">

                <h1>@ViewBag.Titre</h1>

                <h3>@Html.DisplayFor(m => m.ordreDuJour.TitreOdJ)</h3>

            </header>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.TitreOdJ)
                @Html.TextBoxFor(m => m.ordreDuJour.TitreOdJ, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.ordreDuJour.TitreOdJ, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.DateOdJ)
                @Html.EditorFor(m => m.ordreDuJour.DateOdJ, new { htmlAttributes = new { @class = "form-control small" } })
                @Html.ValidationMessageFor(m => m.ordreDuJour.DateOdJ, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.HeureDebutReunion)
                @Html.TextBoxFor(m => m.ordreDuJour.HeureDebutReunion, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.ordreDuJour.HeureDebutReunion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.HeureFinReunion)
                @Html.TextBoxFor(m => m.ordreDuJour.HeureFinReunion, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.ordreDuJour.HeureFinReunion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.LieuReunionODJ)
                @Html.TextBoxFor(m => m.ordreDuJour.LieuReunionODJ, new { @class = "form-control small" })
                @Html.ValidationMessageFor(m => m.ordreDuJour.LieuReunionODJ, "", new { @class = "text-danger" })
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(m => m.ordreDuJour.LieuReunionODJ)
                    @Html.DropDownListFor(m => m.ordreDuJour.LieuReunionODJ, new SelectList(Model.listLieux, "Text", "Value"), htmlAttributes: new { @class = "form-control", id = "Country" })
                    @Html.ValidationMessageFor(m => m.ordreDuJour.LieuReunionODJ, "", new { @class = "text-danger" })
                </div>*@

            <div class="form-group">
                @Html.LabelFor(m => m.sujetPointPrincipal[0].SujetPoint)
                @for (var x = 0; x < Model.sujetPointPrincipal.Count; x++)
                {
                    @Html.EditorFor(m => m.sujetPointPrincipal[x].SujetPoint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.sujetPointPrincipal[x].SujetPoint, "", new { @class = "text-danger" })
                    <ul id="listSP0">
                        @if(Model.listeSousPointSujet.Count != 0)
                        {
                            foreach (var item in Model.listeSousPointSujet)
                            {
                                if(item.IdSujetPointPrincipal == Model.sujetPointPrincipal[x].IdPointPrincipal)
                                {
                                    <li>@Html.EditorFor(m => item.SujetSousPoint, new { htmlAttributes = new { @class = "form-control" } })</li>
                                }
                            }
                        }
                        <a class="fancy-button" id="btnPlus1" onclick="addSPoint(this.id,x)"><span class="glyphicon glyphicon-plus"></span></a>
                    </ul>
                }
            </div>

            <hr />
            <input type="submit" value="Enregistrer" class="fancy-button" />
            <div class="fancy-button rouge" onclick="location.href='@Url.Action("Annuler", "OrdreDuJour", new { currentUrl = Request.UrlReferrer.ToString()})'">Annuler</div>
        </div>
    </div>










    @*<div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => Model.ordreDuJour.IdOdJ)
            <div class="form-group">
                @Html.LabelFor(model => Model.ordreDuJour.TitreOdJ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.ordreDuJour.TitreOdJ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.ordreDuJour.TitreOdJ, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => Model.ordreDuJour.DateOdJ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.ordreDuJour.DateOdJ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.ordreDuJour.DateOdJ, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => Model.ordreDuJour.HeureDebutReunion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.ordreDuJour.HeureDebutReunion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.ordreDuJour.HeureDebutReunion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => Model.ordreDuJour.HeureFinReunion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.ordreDuJour.HeureFinReunion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.ordreDuJour.HeureFinReunion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => Model.ordreDuJour.LieuReunionODJ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model.ordreDuJour.LieuReunionODJ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.ordreDuJour.LieuReunionODJ, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => Model.sujetPointPrincipal[0].SujetPoint, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @for (var x = 0; x < Model.sujetPointPrincipal.Count; x++)
                        {
                            @Html.EditorFor(model => Model.sujetPointPrincipal[x].SujetPoint, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[x].SujetPoint, "", new { @class = "text-danger" })
                        }
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <hr />
                        <input type="submit" value="Enregistrer" class="fancy-button" />
                        <div class="fancy-button rouge" onclick="location.href='@Url.Action("Annuler", "OrdreDuJour", new { currentUrl = Request.UrlReferrer.ToString()})'">Annuler</div>
                    </div>
                </div>
            </div>
        </div>*@
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
