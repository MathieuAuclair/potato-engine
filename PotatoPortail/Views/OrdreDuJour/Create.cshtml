@model ApplicationPlanCadre.Models.ReunionsViewModel.CreerOrdreDuJourViewModel
@{
    ViewBag.Titre = "Création d'un nouvel ordre du jour";
}
<script src="~/Scripts/OrdreDuJour.js" type="text/javascript"></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="form-box">
            <header class="light-header">

                <h1>@ViewBag.Titre</h1>

            </header>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.titreOdJ)
                @Html.TextBoxFor(m => m.ordreDuJour.titreOdJ, new {@class = "form-control small"})
                @Html.ValidationMessageFor(m => m.ordreDuJour.titreOdJ, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.dateOdJ)
                @Html.EditorFor(m => m.ordreDuJour.dateOdJ, new {htmlAttributes = new {@class = "form-control small"}})
                @Html.ValidationMessageFor(m => m.ordreDuJour.dateOdJ, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.heureDebutReunion)
                @Html.TextBoxFor(m => m.ordreDuJour.heureDebutReunion, new {@class = "form-control small"})
                @Html.ValidationMessageFor(m => m.ordreDuJour.heureDebutReunion, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ordreDuJour.heureFinReunion)
                @Html.TextBoxFor(m => m.ordreDuJour.heureFinReunion, new {@class = "form-control small"})
                @Html.ValidationMessageFor(m => m.ordreDuJour.heureFinReunion, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.ordreDuJour.lieuReunionODJ)
                @Html.DropDownListFor(x => x.ordreDuJour.lieuReunionODJ, new SelectList(Model.listLieux, "Text", "Value"), htmlAttributes: new {@class = "form-control small"})
                @Html.ValidationMessageFor(x => x.ordreDuJour.lieuReunionODJ, "", new {@class = "text-danger"})
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model.sujetPointPrincipal[0].sujetPoint)
                @Html.EditorFor(model => Model.sujetPointPrincipal[0].sujetPoint, new {htmlAttributes = new {@class = "form-control", @Value = "Présentation et acceptation de l'ordre du jour"}})
                @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[0].sujetPoint, "", new {@class = "text-danger"})
                <ul id="listSP0">
                    <a class="fancy-button" id="btnPlus1" onclick="addSPoint(this.id, 0)">
                        <span class="glyphicon glyphicon-plus"></span>
                    </a>
                </ul>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => Model.sujetPointPrincipal[1].sujetPoint, new {htmlAttributes = new {@class = "form-control", @Value = "Approbation des procès-verbaux"}})
                @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[1].sujetPoint, "", new {@class = "text-danger"})
                <ul id="listSP0">
                    <a class="fancy-button" id="btnPlus2" onclick="addSPoint(this.id, 1)">
                        <span class="glyphicon glyphicon-plus"></span>
                    </a>
                </ul>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => Model.sujetPointPrincipal[2].sujetPoint, new {htmlAttributes = new {@class = "form-control", @Value = "Information"}})
                @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[2].sujetPoint, "", new {@class = "text-danger"})
                <ul id="listSP0">
                    <a class="fancy-button" id="btnPlus3" onclick="addSPoint(this.id, 2)">
                        <span class="glyphicon glyphicon-plus"></span>
                    </a>
                </ul>
            </div>

            <div class="form-group">
                <input id="ajoutPP" type="button" onclick="ajoutPPrincipal(this.id, 1)" value="Ajout d'un sujet" class="fancy-button"/>
            </div>

            <div class="form-group">
                @Html.EditorFor(model => Model.sujetPointPrincipal[3].sujetPoint, new {htmlAttributes = new {@class = "form-control", @Value = "Varia"}})
                @Html.ValidationMessageFor(model => Model.sujetPointPrincipal[3].sujetPoint, "", new {@class = "text-danger"})
                <ul id="listSP0">
                    <a class="fancy-button" id="btnPlus4" onclick="addSPoint(this.id, 3)">
                        <span class="glyphicon glyphicon-plus"></span>
                    </a>
                </ul>
            </div>

            <hr/>
            <input type="submit" value="Créer" class="fancy-button"/>
            <div class="fancy-button rouge" onclick="location.href = '@Url.Action("Annuler", "OrdreDuJour", new {currentUrl = Request.UrlReferrer.ToString()})'">Annuler</div>

        </div>
    </div>
}