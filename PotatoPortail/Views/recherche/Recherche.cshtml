@using PotatoPortail.ViewModels.ProjetPrincipal

@{
    ViewBag.Titre = "Recherche dans les devis";
}

<body>
    <div class="container">
        <div class="form-box">
            <div id="searchForm">
                <input type="text" class="form-control" placeholder="Recherche" id="strRechercheForm" name="stringRechercher" value="@ViewBag.txtRecherche">
                <button id="rechercheView" onclick="rechercheView()"><span class="glyphicon glyphicon-search"></span></button>
            </div>
        </div>
    </div>

    <div id="resultArea">
        <div class="container">
            <div class="form-box">
                <h1>Résultat</h1>
               @if (Model != null)
                {
                    if ((Model.EnonceCompetence != null) || (Model.ElementCompetence != null) || (Model.DevisMinistere != null) || (Model.Section != null) || (Model.Cours != null) || (Model.Joueur != null) || (Model.entraineur != null) || (Model.jeu != null) || (Model.Equipe != null))
                    {
                        if ((Model.EnonceCompetence.Count == 0) && (Model.ElementCompetence.Count == 0) && (Model.DevisMinistere.Count == 0) && (Model.Section.Count == 0) && (Model.Cours.Count == 0) && (Model.Joueur.Count == 0) && (Model.Entraineur.Count == 0) && (Model.Jeu.Count == 0) && (Model.Equipe.Count == 0))
                        {
                            <p style="color:red;">Aucune information n'a été trouvée</p>
                        }
                        else
                        {
                            if (((IDictionary<string, object>)Model).ContainsKey("EnonceCompetence") && ((ViewBag.modelActuel == "EnonceCompetence") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.EnonceCompetence != null)
                                {
                                    if (Model.EnonceCompetence.Count != 0)
                                    {
                                        <h2>Énoncer Compétence</h2>
                                        <hr />
                                        foreach (RechecheEnonceCompetence enonceCmpt in Model.EnonceCompetence)
                                        {
                                            <a class="info-child clearfix" href="@Url.Action("Info", "EnonceCompetence", new { idCompetence = enonceCmpt.IdCompetence })">
                                                <p><span class="ligne">Code compétence : </span>@Html.Raw(enonceCmpt.CodeCompetence)</p>
                                                <p><span class="ligne">Description : </span>@Html.Raw(enonceCmpt.Description)</p>
                                            </a>
                                        }
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("ElementCompetence") && ((ViewBag.modelActuel == "ElementCompetence") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.ElementCompetence != null)
                                {
                                    if (Model.ElementCompetence.Count != 0)
                                    {
                                         <h2>Élément Compétence</h2>
                                         <hr />
                                        foreach (RechecheElementCompetence elementCompt in Model.ElementCompetence)
                                        {
                                             <a class="info-child clearfix" href="@Url.Action("Info", "ElementCompetence", new { idElement = elementCompt.IdElement })">
                                                 <p><span class="ligne">Description : </span>@Html.Raw(elementCompt.Description)</p>
                                             </a>
                                        }

                                    }
                                }
                            }
                            if (((IDictionary<string, object>)Model).ContainsKey("DevisMinistere") && (ViewBag.modelActuel == "DevisMinistere" || ViewBag.modelActuel == ""))
                            {
                                if (Model.DevisMinistere.Count != 0)
                                {
                                    <h2>Devis ministériel</h2>
                                    <hr/>
                                    foreach (RechercheDevisMinistere devis in Model.DevisMinistere)
                                    {
                                        <a class="info-child clearfix" href="@Url.Action("Info", "DevisMinistere", new { idDevis = devis.IdDevis })">
                                            <p>
                                                <span class="ligne">Année : </span>@Html.Raw(devis.Annee)
                                            </p>
                                            <p>
                                                <span class="ligne">Code de spécialisation : </span>@Html.Raw(devis.CodeSpecialisation)
                                            </p>
                                            <p>
                                                <span class="ligne">Spécialisation : </span>@Html.Raw(devis.Specialisation)
                                            </p>
                                            <p>
                                                <span class="ligne">Condition : </span>@Html.Raw(devis.Condition)
                                            </p>
                                            <p>
                                                <span class="ligne">Sanction : </span>@Html.Raw(devis.Sanction)
                                            </p>
                                            <p>
                                                <span class="ligne">Code de programme : </span>@Html.Raw(devis.Discipline)
                                            </p>
                                        </a>
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("Joueur") && ((ViewBag.modelActuel == "Joueur") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.Joueur != null)
                                {
                                    if (Model.Joueur.Count != 0)
                                    {
                                        <h2>Joueur eSport</h2>
                                        <hr/>
                                        foreach (RechercheJoueur joueur in Model.Joueur)
                                        {
                                            <a class="info-child clearfix" href="@Url.Action("Details", "Joueur", new { idJoueur = joueur.IdJoueur })">
                                                <p>
                                                    <span class="ligne">Pseudo du joueur :</span>@Html.Raw(joueur.PseudoJoueur)
                                                    <br />
                                                    <span class="ligne">Nom du joueur :</span>@Html.Raw(joueur.NomJoueur)
                                                    <br />
                                                    <span class="ligne">Courriel du joueur :</span>@Html.Raw(joueur.CourrielJoueur)
                                        
                                                </p>
                                    
                                            </a>
                                        }
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("Equipe") && ((ViewBag.modelActuel == "Equipe") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.Equipe != null)
                                {
                                    if (Model.Equipe.Count != 0)
                                    {
                                        <h2>Equipe eSport</h2>
                                        <hr/>
                                        foreach (RechercheEquipe equipe in Model.Equipe)
                                        {
                                            <a class="info-child clearfix" href="@Url.Action("Index", "Equipe", new { idEquipe = equipe.IdEquipe })">
                                                <p>
                                                    <span class="ligne">Nom des équipes : </span>@Html.Raw(equipe.NomEquipe)
                                                </p>
                                            </a>
                                        }
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("Jeu") && ((ViewBag.modelActuel == "Jeu") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.Jeu != null)
                                {
                                    if (Model.Jeu.Count != 0)
                                    {
                                        <h2>Jeu de eSport</h2>
                                        <hr/>
                                        foreach (RechercheJeu jeu in Model.Jeu)
                                        {
                                            <a class="info-child clearfix" href="@Url.Action("Index", "Jeu", new { idJeu = jeu.IdJeu })">
                                                <p>
                                                    <span class="ligne">Nom des Jeu : </span>@Html.Raw(jeu.NomJeu)
                                                    <br/>
                                                    <span class="ligne">Description du jeu : </span>@Html.Raw(jeu.DescriptionJeu)
                                                </p>
                                            </a>
                                        }
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("Entraineur") && ((ViewBag.modelActuel == "Entraineur") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.Entraineur != null)
                                {
                                    if (Model.Entraineur.Count != 0)
                                    {
                                        <h2>Entraineur eSport</h2>
                                        <hr/>
                                        foreach (RechercheEntraineur entraineur in Model.Entraineur)
                                        {
                                            <a class="info-child clearfix" href="@Url.Action("Index", "Entraineur", new { idEntraineur = entraineur.IdEntraineur })">
                                                <p>
                                                    <span class="ligne">Pseudo de l'entraineur : </span>@Html.Raw(entraineur.PseudoEntraineur)
                                                    <br />
                                                    <span class="ligne">Nom de l'entraineur : </span>@Html.Raw(entraineur.NomEntraineur)
                                                    <br />
                                                    <span class="ligne">Téléphone de l'entraineur : </span>@Html.Raw(entraineur.TelephoneEntraineur)
                                                    <br />
                                                    <span class="ligne">Courriel de l'entraineur : </span>@Html.Raw(entraineur.CourrielEntraineur)
                                                </p>
                                            </a>
                                        }
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("OrdreDuJour") && ((ViewBag.modelActuel == "OrdreDuJour") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.OrdreDuJour != null)
                                {
                                    if (Model.OrdreDuJour.Count != 0)
                                    {
                                        <h2>Ordre du jour</h2>
                                        <hr />
                                        foreach (RechercheOrdreDuJour odj in Model.OrdreDuJour)
                                        {
                                            <a class="info-child clearfix" href="@Url.Action("Details", "OrdreDuJour", new { id = odj.IdOrdreDuJour })">
                                                <p><span class="ligne">Titre : </span>@Html.Raw(odj.Titre)</p>
                                            </a>
                                        }
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("Cours") && ((ViewBag.modelActuel == "Cours") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.Cours != null)
                                {
                                    if (Model.Cours.Count != 0)
                                    {
                                        <h2>Cours</h2>
                                        <hr/>
                                        foreach (RechercheCours planCadre in Model.Cours)
                                        {
                                          <a class="info-child clearfix" href="@Url.Action("Info", "PlanCadre", new { numeroCours = planCadre.NumeroCours })">
                                                  <p><span class="ligne">Titre du cours : </span>@Html.Raw(planCadre.TitreCours)</p>
                                          </a>
                                        }
                                    }
                                }
                            }

                            if (((IDictionary<string, object>)Model).ContainsKey("Section") && ((ViewBag.modelActuel == "Section") || (ViewBag.modelActuel == "")))
                            {
                                if (Model.Section != null)
                                {
                                    if (Model.Section.Count != 0)
                                    {
                                        <h2>Section</h2>
                                        <hr/>
                                        foreach (RechercheSection section in Model.Section)
                                        {
                                        <a class="info-child clearfix" href="@Url.Action("Details", "PlanCours", new { idNomSection = section.IdNomSection })">
                                            <p><span class="ligne">Nom de section : </span>@Html.Raw(section.TitreSection)</p>
                                        </a>
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            </div>
        </div>
    </div>

    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

<script type="text/javascript">

    function rechercheView() {
        var stringRecherche = document.getElementById("strRechercheForm").value;
        window.location.href = "@Url.Action("Recherche", "Recherche")?stringRechercher=" + stringRecherche + "&tableRecherche=" + "@ViewBag.modelActuel";
    }

    var input = document.getElementById("strRechercheForm");
    input.addEventListener("keyup", function (e) {
        if (e.which === 13) { // 13 = Entrée sur le clavier
            document.getElementById("rechercheView").click();
        }
    });

</script>

</body>
